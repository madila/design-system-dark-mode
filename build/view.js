import*as e from"@wordpress/interactivity";var t={d:(e,o)=>{for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const o=(c={getContext:()=>e.getContext,store:()=>e.store},a={},t.d(a,c),a),{state:r,actions:s}=(0,o.store)("dark-mode",{state:{isDark:!1,get label(){const{isDark:e}=(0,o.getContext)();return`Switch to ${e?"light":"dark"} mode`},get scheme(){const{isDark:e}=(0,o.getContext)();return e?"dark":"light"}},actions:{toggle:()=>{const e=(0,o.getContext)();e.isDark=!e.isDark,localStorage.setItem("wp-block-dark-mode--scheme",r.scheme)},bodyScrolled:e=>{const{scrollY:t}=window;t||(r.scrolled=!1,e.target.documentElement.classList.remove("scrolled")),r.scrolled||(r.scrolled=!0,t>0?e.target.documentElement.classList.add("scrolled"):r.scrolled=!1)},initScheme:()=>{const e=localStorage.getItem("wp-block-dark-mode--scheme"),t=(0,o.getContext)();e&&e!==r.scheme&&(t.isDark="dark"===e)}},callbacks:{updateScheme:()=>{const{isDark:e}=(0,o.getContext)();document.documentElement.dataset.scheme=e?"dark":"light"}}});var c,a;