import*as e from"@wordpress/interactivity";var t={d:(e,o)=>{for(var r in o)t.o(o,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const o=(a={getContext:()=>e.getContext,store:()=>e.store},c={},t.d(c,a),c),{state:r,actions:s}=(0,o.store)("dark-mode",{state:{isDark:!1,scrolled:!1,get label(){const{isDark:e}=(0,o.getContext)();return`Switch to ${e?"light":"dark"} mode`},get prefersDarkMode(){return window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches},get scheme(){const{isDark:e}=(0,o.getContext)();return e?"dark":"light"}},actions:{toggle:()=>{const e=(0,o.getContext)();e.isDark=!e.isDark,localStorage.setItem("design-system-dark-mode--scheme",r.scheme)},bodyScrolled:e=>{const t=window.scrollY>0;r.scrolled!==t&&(r.scrolled=t,e.target.documentElement.classList.toggle("scrolled",t))},initScheme:()=>{const e=localStorage.getItem("design-system-dark-mode--scheme"),t=(0,o.getContext)();(r.prefersDarkMode||e&&e!==r.scheme)&&(console.log(r.prefersDarkMode),t.isDark="dark"===e||r.prefersDarkMode&&!e)}},callbacks:{updateScheme:()=>{const{isDark:e}=(0,o.getContext)();document.documentElement.dataset.scheme=e?"dark":"light"}}});var a,c;